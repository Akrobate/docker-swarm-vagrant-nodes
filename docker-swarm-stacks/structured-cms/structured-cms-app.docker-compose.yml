# Docker for stack deployement
# Contains, api, front, mongodb and mongodb admin tool

version: '3'

services:

  frontend:
    image: registry.gitlab.com/akrobate/structured-cms/frontend:latest
    restart: always
    environment:
      API_HOST: ${BACKEND_SERVER_API}
      API_PORT: ${BACKEND_SERVER_HOST}
    ports:
      - ${FRONTEND_PORT}:80
    deploy:
      mode: global


  backend:
    image: registry.gitlab.com/akrobate/structured-cms/backend:latest
    restart: always
    environment:
      APPENV_SERVER_PORT: ${BACKEND_SERVER_PORT}
      APPENV_STORAGE_MONGODB_USERNAME: ${STORAGE_MONGODB_USERNAME}
      APPENV_STORAGE_MONGODB_PASSWORD: ${STORAGE_MONGODB_PASSWORD}
      APPENV_STORAGE_MONGODB_PORT: ${STORAGE_MONGODB_PORT}
      APPENV_STORAGE_MONGODB_DATABASE_NAME: ${STORAGE_MONGODB_DATABASE_NAME}
      APPENV_STORAGE_MONGODB_HOST: ${STORAGE_MONGODB_HOST}


  mongo:
    image: mongo:3.4-xenial
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${STORAGE_MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${STORAGE_MONGODB_PASSWORD}
    ports:
      - ${STORAGE_MONGODB_PORT}:27017
    volumes:
      - ${SHARED_VOLUME_PATH}/mongo:/data/db


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${STORAGE_MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${STORAGE_MONGODB_PASSWORD}
